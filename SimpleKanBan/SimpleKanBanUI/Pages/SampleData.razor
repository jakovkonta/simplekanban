@page "/SampleData"
@inject ICategoryData categoryData
@inject IStatusData statusData

<h3>SampleData</h3>

@if (categoriesCreated)
{
    <h4>Categories have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="CreateCategories">Create Categories</button>
}

@if (statusesCreated)
{
    <h4>Statuses have been created</h4>
}
else
{
    <button class="btn btn-primary" @onclick="CreateStatuses">Create Statuses</button>
}



@code {

    private bool categoriesCreated = false;
    private bool statusesCreated = false;

    private async Task CreateCategories()
    {
        var categories = await categoryData.GetAllCategories();

        if (categories?.Count > 0)
        {
            return;
        }

        CategoryModel cat = new()
        {
            CategoryName = "PBI",
            CategoryDescription = "Product Backlog Item"
        };

        await categoryData.CreateCategory(cat);

        cat = new()
            {
                CategoryName = "Bug",
                CategoryDescription = "Error, flaw or fault in the design, development, or operation of computer software"
            };

        await categoryData.CreateCategory(cat);

        categoriesCreated = true;
    }

    private async Task CreateStatuses()
    {
        var statuses = await statusData.GetAllStatuses();

        if (statuses?.Count > 0)
        {
            return;
        }

        StatusModel stat = new()
            {
                StatusName = "New",
                StatusDescription = "Newly create, not assigned PBIs."
            };

        await statusData.CreateStatus(stat);

        stat = new()
            {
                StatusName = "In Progress",
                StatusDescription = "Assigned and in execution."
            };

        await statusData.CreateStatus(stat);

        stat = new()
            {
                StatusName = "In Testing",
                StatusDescription = "Impelemtation done, testing phase."
            };

        await statusData.CreateStatus(stat);

        stat = new()
            {
                StatusName = "Done",
                StatusDescription = "Fully completed and on master."
            };

        await statusData.CreateStatus(stat);

        statusesCreated = true;
    }
}
